<?xml version="1.0" encoding="utf-8"?><DEFECTS><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
      <FILENAME>mat.inl.hpp</FILENAME>
      <LINE>433</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>算术溢出: 对 32 位值进行移位操作，然后强制转换为 64 位值。 结果可能不是预期值。</DESCRIPTION>
    <FUNCTION>cv::Mat::{ctor}</FUNCTION>
    <DECORATED>??0Mat@cv@@QEAA@HHHPEAX_K@Z</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
      <FILENAME>mat.inl.hpp</FILENAME>
      <LINE>433</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 &lt;&lt; ，然后将结果转换到 8 字节值。在调用运算符 &lt;&lt; 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>cv::Mat::{ctor}</FUNCTION>
    <DECORATED>??0Mat@cv@@QEAA@HHHPEAX_K@Z</DECORATED>
    <FUNCLINE>426</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
      <FILENAME>mat.inl.hpp</FILENAME>
      <LINE>466</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>算术溢出: 对 32 位值进行移位操作，然后强制转换为 64 位值。 结果可能不是预期值。</DESCRIPTION>
    <FUNCTION>cv::Mat::{ctor}</FUNCTION>
    <DECORATED>??0Mat@cv@@QEAA@V?$Size_@H@1@HPEAX_K@Z</DECORATED>
    <FUNCLINE>459</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
      <FILENAME>mat.inl.hpp</FILENAME>
      <LINE>466</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 &lt;&lt; ，然后将结果转换到 8 字节值。在调用运算符 &lt;&lt; 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>cv::Mat::{ctor}</FUNCTION>
    <DECORATED>??0Mat@cv@@QEAA@V?$Size_@H@1@HPEAX_K@Z</DECORATED>
    <FUNCLINE>459</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
      <FILENAME>mat.inl.hpp</FILENAME>
      <LINE>1179</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>26439</DEFECTCODE>
    <DESCRIPTION>可能不会 throw 此类型的函数。将其声明为 "noexcept" (f.6)。</DESCRIPTION>
    <FUNCTION>cv::Mat::{ctor}</FUNCTION>
    <DECORATED>??0Mat@cv@@QEAA@$$QEAV01@@Z</DECORATED>
    <FUNCLINE>1179</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
      <FILENAME>mat.inl.hpp</FILENAME>
      <LINE>1204</LINE>
      <COLUMN>10</COLUMN>
    </SFA>
    <DEFECTCODE>26439</DEFECTCODE>
    <DESCRIPTION>可能不会 throw 此类型的函数。将其声明为 "noexcept" (f.6)。</DESCRIPTION>
    <FUNCTION>cv::Mat::=</FUNCTION>
    <DECORATED>??4Mat@cv@@QEAAAEAV01@$$QEAV01@@Z</DECORATED>
    <FUNCLINE>1204</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
      <FILENAME>mat.inl.hpp</FILENAME>
      <LINE>1300</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 cv::MatStep::buf。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>cv::MatStep::{ctor}</FUNCTION>
    <DECORATED>??0MatStep@cv@@QEAA@XZ</DECORATED>
    <FUNCLINE>1300</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>cv::MatStep::buf</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
      <FILENAME>mat.inl.hpp</FILENAME>
      <LINE>1306</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 cv::MatStep::buf。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>cv::MatStep::{ctor}</FUNCTION>
    <DECORATED>??0MatStep@cv@@QEAA@_K@Z</DECORATED>
    <FUNCLINE>1306</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>cv::MatStep::buf</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
      <FILENAME>mat.inl.hpp</FILENAME>
      <LINE>1943</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>算术溢出: 对 32 位值进行移位操作，然后强制转换为 64 位值。 结果可能不是预期值。</DESCRIPTION>
    <FUNCTION>cv::SparseMat::elemSize</FUNCTION>
    <DECORATED>?elemSize@SparseMat@cv@@QEBA_KXZ</DECORATED>
    <FUNCLINE>1941</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
      <FILENAME>mat.inl.hpp</FILENAME>
      <LINE>1943</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 &lt;&lt; ，然后将结果转换到 8 字节值。在调用运算符 &lt;&lt; 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>cv::SparseMat::elemSize</FUNCTION>
    <DECORATED>?elemSize@SparseMat@cv@@QEBA_KXZ</DECORATED>
    <FUNCLINE>1941</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
      <FILENAME>mat.inl.hpp</FILENAME>
      <LINE>2387</LINE>
      <COLUMN>23</COLUMN>
    </SFA>
    <DEFECTCODE>6011</DEFECTCODE>
    <DESCRIPTION>取消对 NULL 指针“m”的引用。查看第 2384 行以找出可能会发生此情况的前一位置</DESCRIPTION>
    <FUNCTION>cv::MatConstIterator::{ctor}</FUNCTION>
    <DECORATED>??0MatConstIterator@cv@@QEAA@PEBVMat@1@HH@Z</DECORATED>
    <FUNCLINE>2383</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>4</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
        <FILENAME>mat.inl.hpp</FILENAME>
        <LINE>2384</LINE>
        <COLUMN>7</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
        <FILENAME>mat.inl.hpp</FILENAME>
        <LINE>2384</LINE>
        <COLUMN>21</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
        <FILENAME>mat.inl.hpp</FILENAME>
        <LINE>2384</LINE>
        <COLUMN>42</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
        <FILENAME>mat.inl.hpp</FILENAME>
        <LINE>2384</LINE>
        <COLUMN>57</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
        <FILENAME>mat.inl.hpp</FILENAME>
        <LINE>2384</LINE>
        <COLUMN>70</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
        <FILENAME>mat.inl.hpp</FILENAME>
        <LINE>2386</LINE>
        <COLUMN>4</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>分支</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>“_m”可能为 NULL (跳过此分支)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
        <FILENAME>mat.inl.hpp</FILENAME>
        <LINE>2387</LINE>
        <COLUMN>23</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>使用情况</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>已取消对“_m”的引用，但可能仍为 NULL</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
      <FILENAME>mat.inl.hpp</FILENAME>
      <LINE>2401</LINE>
      <COLUMN>23</COLUMN>
    </SFA>
    <DEFECTCODE>6011</DEFECTCODE>
    <DESCRIPTION>取消对 NULL 指针“m”的引用。查看第 2398 行以找出可能会发生此情况的前一位置</DESCRIPTION>
    <FUNCTION>cv::MatConstIterator::{ctor}</FUNCTION>
    <DECORATED>??0MatConstIterator@cv@@QEAA@PEBVMat@1@V?$Point_@H@1@@Z</DECORATED>
    <FUNCLINE>2397</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>4</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
        <FILENAME>mat.inl.hpp</FILENAME>
        <LINE>2398</LINE>
        <COLUMN>7</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
        <FILENAME>mat.inl.hpp</FILENAME>
        <LINE>2398</LINE>
        <COLUMN>21</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
        <FILENAME>mat.inl.hpp</FILENAME>
        <LINE>2398</LINE>
        <COLUMN>42</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
        <FILENAME>mat.inl.hpp</FILENAME>
        <LINE>2398</LINE>
        <COLUMN>57</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
        <FILENAME>mat.inl.hpp</FILENAME>
        <LINE>2398</LINE>
        <COLUMN>70</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
        <FILENAME>mat.inl.hpp</FILENAME>
        <LINE>2400</LINE>
        <COLUMN>4</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>分支</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>“_m”可能为 NULL (跳过此分支)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
        <FILENAME>mat.inl.hpp</FILENAME>
        <LINE>2401</LINE>
        <COLUMN>23</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>使用情况</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>已取消对“_m”的引用，但可能仍为 NULL</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
      <FILENAME>mat.inl.hpp</FILENAME>
      <LINE>3346</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>枚举类型“cv::UMatUsageFlags”未设定范围。相比于 "enum"，首选 "enum class" (Enum.3)。</DESCRIPTION>
    <FUNCTION>cv::UMat::{ctor}</FUNCTION>
    <DECORATED>??0UMat@cv@@QEAA@W4UMatUsageFlags@1@@Z</DECORATED>
    <FUNCLINE>3346</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
      <FILENAME>mat.inl.hpp</FILENAME>
      <LINE>3634</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26439</DEFECTCODE>
    <DESCRIPTION>可能不会 throw 此类型的函数。将其声明为 "noexcept" (f.6)。</DESCRIPTION>
    <FUNCTION>cv::UMat::{ctor}</FUNCTION>
    <DECORATED>??0UMat@cv@@QEAA@$$QEAV01@@Z</DECORATED>
    <FUNCLINE>3634</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
      <FILENAME>mat.inl.hpp</FILENAME>
      <LINE>3658</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26439</DEFECTCODE>
    <DESCRIPTION>可能不会 throw 此类型的函数。将其声明为 "noexcept" (f.6)。</DESCRIPTION>
    <FUNCTION>cv::UMat::=</FUNCTION>
    <DECORATED>??4UMat@cv@@QEAAAEAV01@$$QEAV01@@Z</DECORATED>
    <FUNCLINE>3658</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
      <FILENAME>utility.hpp</FILENAME>
      <LINE>463</LINE>
      <COLUMN>52</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>算术溢出: 对 32 位值进行移位操作，然后强制转换为 64 位值。 结果可能不是预期值。</DESCRIPTION>
    <FUNCTION>cv::getElemSize</FUNCTION>
    <DECORATED>?getElemSize@cv@@YA_KH@Z</DECORATED>
    <FUNCLINE>463</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
      <FILENAME>utility.hpp</FILENAME>
      <LINE>463</LINE>
      <COLUMN>52</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 &lt;&lt; ，然后将结果转换到 8 字节值。在调用运算符 &lt;&lt; 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>cv::getElemSize</FUNCTION>
    <DECORATED>?getElemSize@cv@@YA_KH@Z</DECORATED>
    <FUNCLINE>463</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
      <FILENAME>types_c.h</FILENAME>
      <LINE>334</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 _IplImage::BorderConst。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>_IplImage::{ctor}</FUNCTION>
    <DECORATED>??0_IplImage@@QEAA@XZ</DECORATED>
    <FUNCLINE>334</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>_IplImage::BorderConst</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
      <FILENAME>types_c.h</FILENAME>
      <LINE>460</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 CvMat::&lt;unnamed-tag&gt;::width。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>CvMat::{ctor}</FUNCTION>
    <DECORATED>??0CvMat@@QEAA@XZ</DECORATED>
    <FUNCLINE>460</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>CvMat::&lt;unnamed-tag&gt;::width</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
      <FILENAME>types_c.h</FILENAME>
      <LINE>461</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 CvMat::&lt;unnamed-tag&gt;::width。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>CvMat::{ctor}</FUNCTION>
    <DECORATED>??0CvMat@@QEAA@AEBU0@@Z</DECORATED>
    <FUNCLINE>461</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>CvMat::&lt;unnamed-tag&gt;::width</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
      <FILENAME>types_c.h</FILENAME>
      <LINE>651</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 CvMatND::hdr_refcount。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>CvMatND::{ctor}</FUNCTION>
    <DECORATED>??0CvMatND@@QEAA@XZ</DECORATED>
    <FUNCLINE>651</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>CvMatND::hdr_refcount</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
      <FILENAME>types_c.h</FILENAME>
      <LINE>1129</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 CvScalar::val。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>CvScalar::{ctor}</FUNCTION>
    <DECORATED>??0CvScalar@@QEAA@XZ</DECORATED>
    <FUNCLINE>1129</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>CvScalar::val</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\flann\</FILEPATH>
      <FILENAME>matrix.h</FILENAME>
      <LINE>95</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 cvflann::UntypedMatrix::type。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>cvflann::UntypedMatrix::{ctor}</FUNCTION>
    <DECORATED>??0UntypedMatrix@cvflann@@QEAA@PEAXJJ@Z</DECORATED>
    <FUNCLINE>95</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>cvflann::UntypedMatrix::type</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\flann\</FILEPATH>
      <FILENAME>saving.h</FILENAME>
      <LINE>49</LINE>
      <COLUMN>57</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>枚举类型“cvflann::flann_datatype_t”未设定范围。相比于 "enum"，首选 "enum class" (Enum.3)。</DESCRIPTION>
    <FUNCTION>cvflann::Datatype&lt;char&gt;::type</FUNCTION>
    <DECORATED>?type@?$Datatype@D@cvflann@@SA?AW4flann_datatype_t@2@XZ</DECORATED>
    <FUNCLINE>49</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\flann\</FILEPATH>
      <FILENAME>dynamic_bitset.h</FILENAME>
      <LINE>62</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 cvflann::DynamicBitset::size_。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>cvflann::DynamicBitset::{ctor}</FUNCTION>
    <DECORATED>??0DynamicBitset@cvflann@@QEAA@XZ</DECORATED>
    <FUNCLINE>62</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>cvflann::DynamicBitset::size_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\flann\</FILEPATH>
      <FILENAME>allocator.h</FILENAME>
      <LINE>95</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 cvflann::PooledAllocator::loc。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>cvflann::PooledAllocator::{ctor}</FUNCTION>
    <DECORATED>??0PooledAllocator@cvflann@@QEAA@H@Z</DECORATED>
    <FUNCLINE>95</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>cvflann::PooledAllocator::loc</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\flann\</FILEPATH>
      <FILENAME>kdtree_index.h</FILENAME>
      <LINE>57</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>枚举类型“cvflann::flann_algorithm_t”未设定范围。相比于 "enum"，首选 "enum class" (Enum.3)。</DESCRIPTION>
    <FUNCTION>cvflann::KDTreeIndexParams::{ctor}</FUNCTION>
    <DECORATED>??0KDTreeIndexParams@cvflann@@QEAA@H@Z</DECORATED>
    <FUNCLINE>55</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\flann\</FILEPATH>
      <FILENAME>kmeans_index.h</FILENAME>
      <LINE>57</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>枚举类型“cvflann::flann_centers_init_t”未设定范围。相比于 "enum"，首选 "enum class" (Enum.3)。</DESCRIPTION>
    <FUNCTION>cvflann::KMeansIndexParams::{ctor}</FUNCTION>
    <DECORATED>??0KMeansIndexParams@cvflann@@QEAA@HHW4flann_centers_init_t@1@M@Z</DECORATED>
    <FUNCLINE>57</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\flann\</FILEPATH>
      <FILENAME>lsh_table.h</FILENAME>
      <LINE>351</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>cvflann::lsh::LshTable&lt;unsigned char&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$LshTable@E@lsh@cvflann@@QEAA@II@Z</DECORATED>
    <FUNCLINE>344</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\flann\</FILEPATH>
      <FILENAME>lsh_table.h</FILENAME>
      <LINE>352</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>cvflann::lsh::LshTable&lt;unsigned char&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$LshTable@E@lsh@cvflann@@QEAA@II@Z</DECORATED>
    <FUNCLINE>344</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\flann\</FILEPATH>
      <FILENAME>lsh_table.h</FILENAME>
      <LINE>94</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 cvflann::lsh::LshStats::bucket_size_mean_。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>cvflann::lsh::LshStats::{ctor}</FUNCTION>
    <DECORATED>??0LshStats@lsh@cvflann@@QEAA@XZ</DECORATED>
    <FUNCLINE>94</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>cvflann::lsh::LshStats::bucket_size_mean_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\imgproc\</FILEPATH>
      <FILENAME>types_c.h</FILENAME>
      <LINE>404</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 CvMoments::mu21。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>CvMoments::{ctor}</FUNCTION>
    <DECORATED>??0CvMoments@@QEAA@XZ</DECORATED>
    <FUNCLINE>404</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>CvMoments::mu21</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\imgproc\</FILEPATH>
      <FILENAME>imgproc_c.h</FILENAME>
      <LINE>1131</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 CvFont::line_type。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>CvFont::{ctor}</FUNCTION>
    <DECORATED>??0CvFont@@QEAA@XZ</DECORATED>
    <FUNCLINE>1131</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>CvFont::line_type</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\</FILEPATH>
      <FILENAME>imgproc.hpp</FILENAME>
      <LINE>4616</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>cv::LineIterator::++</FUNCTION>
    <DECORATED>??ELineIterator@cv@@QEAAAEAV01@XZ</DECORATED>
    <FUNCLINE>4612</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\</FILEPATH>
      <FILENAME>imgproc.hpp</FILENAME>
      <LINE>4633</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>cv::LineIterator::pos</FUNCTION>
    <DECORATED>?pos@LineIterator@cv@@QEBA?AV?$Point_@H@2@XZ</DECORATED>
    <FUNCLINE>4629</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\</FILEPATH>
      <FILENAME>objdetect.hpp</FILENAME>
      <LINE>127</LINE>
      <COLUMN>61</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>cv::SimilarRects::()</FUNCTION>
    <DECORATED>??RSimilarRects@cv@@QEBA_NAEBV?$Rect_@H@1@0@Z</DECORATED>
    <FUNCLINE>125</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\objdetect\</FILEPATH>
      <FILENAME>detection_based_tracker.hpp</FILENAME>
      <LINE>152</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>枚举类型“cv::DetectionBasedTracker::ObjectStatus”未设定范围。相比于 "enum"，首选 "enum class" (Enum.3)。</DESCRIPTION>
    <FUNCTION>cv::DetectionBasedTracker::ExtObject::{ctor}</FUNCTION>
    <DECORATED>??0ExtObject@DetectionBasedTracker@cv@@QEAA@HV?$Rect_@H@2@W4ObjectStatus@12@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
      <FILENAME>cuda.inl.hpp</FILENAME>
      <LINE>301</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>算术溢出: 对 32 位值进行移位操作，然后强制转换为 64 位值。 结果可能不是预期值。</DESCRIPTION>
    <FUNCTION>cv::cuda::GpuMat::elemSize</FUNCTION>
    <DECORATED>?elemSize@GpuMat@cuda@cv@@QEBA_KXZ</DECORATED>
    <FUNCLINE>299</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
      <FILENAME>cuda.inl.hpp</FILENAME>
      <LINE>301</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 &lt;&lt; ，然后将结果转换到 8 字节值。在调用运算符 &lt;&lt; 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>cv::cuda::GpuMat::elemSize</FUNCTION>
    <DECORATED>?elemSize@GpuMat@cuda@cv@@QEBA_KXZ</DECORATED>
    <FUNCLINE>299</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
      <FILENAME>cuda.inl.hpp</FILENAME>
      <LINE>385</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>枚举类型“cv::cuda::HostMem::AllocType”未设定范围。相比于 "enum"，首选 "enum class" (Enum.3)。</DESCRIPTION>
    <FUNCTION>cv::cuda::HostMem::{ctor}</FUNCTION>
    <DECORATED>??0HostMem@cuda@cv@@QEAA@W4AllocType@012@@Z</DECORATED>
    <FUNCLINE>385</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
      <FILENAME>cuda.inl.hpp</FILENAME>
      <LINE>482</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>算术溢出: 对 32 位值进行移位操作，然后强制转换为 64 位值。 结果可能不是预期值。</DESCRIPTION>
    <FUNCTION>cv::cuda::HostMem::elemSize</FUNCTION>
    <DECORATED>?elemSize@HostMem@cuda@cv@@QEBA_KXZ</DECORATED>
    <FUNCLINE>480</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
      <FILENAME>cuda.inl.hpp</FILENAME>
      <LINE>482</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 &lt;&lt; ，然后将结果转换到 8 字节值。在调用运算符 &lt;&lt; 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>cv::cuda::HostMem::elemSize</FUNCTION>
    <DECORATED>?elemSize@HostMem@cuda@cv@@QEBA_KXZ</DECORATED>
    <FUNCLINE>480</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
      <FILENAME>cuda.inl.hpp</FILENAME>
      <LINE>605</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>枚举类型“cv::cuda::FeatureSet”未设定范围。相比于 "enum"，首选 "enum class" (Enum.3)。</DESCRIPTION>
    <FUNCTION>cv::cuda::DeviceInfo::supports</FUNCTION>
    <DECORATED>?supports@DeviceInfo@cuda@cv@@QEBA_NW4FeatureSet@23@@Z</DECORATED>
    <FUNCLINE>605</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\stitching\detail\</FILEPATH>
      <FILENAME>warpers.hpp</FILENAME>
      <LINE>169</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 cv::detail::RotationWarperBase&lt;cv::detail::CompressedRectilinearProjector&gt;::projector_。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>cv::detail::RotationWarperBase&lt;cv::detail::CompressedRectilinearProjector&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$RotationWarperBase@UCompressedRectilinearProjector@detail@cv@@@detail@cv@@QEAA@XZ</DECORATED>
    <FUNCLINE>169</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>cv::detail::RotationWarperBase&lt;cv::detail::CompressedRectilinearProjector&gt;::projector_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\stitching\detail\</FILEPATH>
      <FILENAME>seam_finders.hpp</FILENAME>
      <LINE>125</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>枚举类型“cv::detail::DpSeamFinder::CostFunction”未设定范围。相比于 "enum"，首选 "enum class" (Enum.3)。</DESCRIPTION>
    <FUNCTION>cv::detail::DpSeamFinder::costFunction</FUNCTION>
    <DECORATED>?costFunction@DpSeamFinder@detail@cv@@QEBA?AW4CostFunction@123@XZ</DECORATED>
    <FUNCLINE>125</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\</FILEPATH>
      <FILENAME>stitching.hpp</FILENAME>
      <LINE>184</LINE>
      <COLUMN>54</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>枚举类型“cv::detail::WaveCorrectKind”未设定范围。相比于 "enum"，首选 "enum class" (Enum.3)。</DESCRIPTION>
    <FUNCTION>cv::Stitcher::waveCorrectKind</FUNCTION>
    <DECORATED>?waveCorrectKind@Stitcher@cv@@QEBA?AW4WaveCorrectKind@detail@2@XZ</DECORATED>
    <FUNCLINE>184</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\videostab\</FILEPATH>
      <FILENAME>motion_core.hpp</FILENAME>
      <LINE>102</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>枚举类型“cv::videostab::MotionModel”未设定范围。相比于 "enum"，首选 "enum class" (Enum.3)。</DESCRIPTION>
    <FUNCTION>cv::videostab::RansacParams::default2dMotion</FUNCTION>
    <DECORATED>?default2dMotion@RansacParams@videostab@cv@@SA?AU123@W4MotionModel@23@@Z</DECORATED>
    <FUNCLINE>102</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\videostab\</FILEPATH>
      <FILENAME>fast_marching.hpp</FILENAME>
      <LINE>66</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 cv::videostab::FastMarchingMethod::size_。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>cv::videostab::FastMarchingMethod::{ctor}</FUNCTION>
    <DECORATED>??0FastMarchingMethod@videostab@cv@@QEAA@XZ</DECORATED>
    <FUNCLINE>66</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>cv::videostab::FastMarchingMethod::size_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\flann\</FILEPATH>
      <FILENAME>lsh_table.h</FILENAME>
      <LINE>274</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>枚举类型“cvflann::lsh::LshTable&lt;unsigned char&gt;::SpeedLevel”未设定范围。相比于 "enum"，首选 "enum class" (Enum.3)。</DESCRIPTION>
    <FUNCTION>cvflann::lsh::LshTable&lt;unsigned char&gt;::initialize</FUNCTION>
    <DECORATED>?initialize@?$LshTable@E@lsh@cvflann@@AEAAX_K@Z</DECORATED>
    <FUNCLINE>264</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\flann\</FILEPATH>
      <FILENAME>any.h</FILENAME>
      <LINE>95</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>6269</DEFECTCODE>
    <DESCRIPTION>运算顺序可能不正确: 已忽略取消引用。</DESCRIPTION>
    <FUNCTION>cvflann::anyimpl::big_any_policy&lt;enum cvflann::flann_algorithm_t&gt;::move</FUNCTION>
    <DECORATED>?move@?$big_any_policy@W4flann_algorithm_t@cvflann@@@anyimpl@cvflann@@UEAAXPEBQEAXPEAPEAX@Z</DECORATED>
    <FUNCLINE>93</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
      <FILENAME>matx.hpp</FILENAME>
      <LINE>1050</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6385</DEFECTCODE>
    <DESCRIPTION>从“this-&gt;val”中读取的数据无效: 可读大小为“12”个字节，但可能读取了“i”个字节。</DESCRIPTION>
    <FUNCTION>cv::Vec&lt;float,3&gt;::[]</FUNCTION>
    <DECORATED>??A?$Vec@M$02@cv@@QEBAAEBMH@Z</DECORATED>
    <FUNCLINE>1047</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>4</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
        <FILENAME>matx.hpp</FILENAME>
        <LINE>1049</LINE>
        <COLUMN>4</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>分支</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>跳过此分支(假定“&lt;分支条件&gt;”为 false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
        <FILENAME>matx.hpp</FILENAME>
        <LINE>1050</LINE>
        <COLUMN>4</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>使用情况</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>从“this-&gt;val[3]”中读取无效(可读范围是 0 到 2)</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
      <FILENAME>matx.hpp</FILENAME>
      <LINE>790</LINE>
      <COLUMN>53</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 cv::Matx&lt;double,4,1&gt;::val。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>cv::Matx&lt;double,4,1&gt;::{ctor}</FUNCTION>
    <DECORATED>??$?0$03@?$Matx@N$03$00@cv@@QEAA@AEBV?$Matx@N$03$03@1@AEBV01@UMatx_MatMulOp@1@@Z</DECORATED>
    <FUNCLINE>790</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>cv::Matx&lt;double,4,1&gt;::val</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
      <FILENAME>mat.inl.hpp</FILENAME>
      <LINE>1656</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6011</DEFECTCODE>
    <DESCRIPTION>取消对 NULL 指针“this-&gt;data+this-&gt;step.p[0]*i0”的引用。</DESCRIPTION>
    <FUNCTION>cv::Mat_&lt;int&gt;::()</FUNCTION>
    <DECORATED>??R?$Mat_@H@cv@@QEAAAEAHHH@Z</DECORATED>
    <FUNCLINE>1649</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>4</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
        <FILENAME>mat.inl.hpp</FILENAME>
        <LINE>1651</LINE>
        <COLUMN>4</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
        <FILENAME>mat.inl.hpp</FILENAME>
        <LINE>1652</LINE>
        <COLUMN>4</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>分支</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>“this-&gt;data+this-&gt;step.p[0]*i0”可能为 NULL (跳过此分支)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
        <FILENAME>mat.inl.hpp</FILENAME>
        <LINE>1653</LINE>
        <COLUMN>4</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
        <FILENAME>mat.inl.hpp</FILENAME>
        <LINE>1654</LINE>
        <COLUMN>4</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
        <FILENAME>mat.inl.hpp</FILENAME>
        <LINE>1655</LINE>
        <COLUMN>4</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
        <FILENAME>mat.inl.hpp</FILENAME>
        <LINE>1656</LINE>
        <COLUMN>4</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>使用情况</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>已取消对“this-&gt;data+this-&gt;step.p[0]*i0”的引用，但可能仍为 NULL</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
      <FILENAME>matx.hpp</FILENAME>
      <LINE>613</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 cv::Matx&lt;float,3,1&gt;::val。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>cv::Matx&lt;float,3,1&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Matx@M$02$00@cv@@QEAA@PEBM@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>cv::Matx&lt;float,3,1&gt;::val</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
      <FILENAME>matx.hpp</FILENAME>
      <LINE>513</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>for 循环定义错误: 初始条件不满足测试。 循环体未执行。</DESCRIPTION>
    <FUNCTION>cv::Matx&lt;float,3,1&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Matx@M$02$00@cv@@QEAA@MMM@Z</DECORATED>
    <FUNCLINE>509</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
      <FILENAME>matx.hpp</FILENAME>
      <LINE>513</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>6201</DEFECTCODE>
    <DESCRIPTION>索引“3”超出了“0”至“2”的有效范围(对于可能在堆栈中分配的缓冲区“this-&gt;val”)。</DESCRIPTION>
    <FUNCTION>cv::Matx&lt;float,3,1&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Matx@M$02$00@cv@@QEAA@MMM@Z</DECORATED>
    <FUNCLINE>509</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
      <FILENAME>matx.hpp</FILENAME>
      <LINE>488</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 cv::Matx&lt;float,3,1&gt;::val。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>cv::Matx&lt;float,3,1&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Matx@M$02$00@cv@@QEAA@XZ</DECORATED>
    <FUNCLINE>488</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>cv::Matx&lt;float,3,1&gt;::val</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
      <FILENAME>mat.inl.hpp</FILENAME>
      <LINE>958</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6011</DEFECTCODE>
    <DESCRIPTION>取消对 NULL 指针“data+step.p[0]*i0”的引用。</DESCRIPTION>
    <FUNCTION>cv::Mat::at</FUNCTION>
    <DECORATED>??$at@M@Mat@cv@@QEAAAEAMHH@Z</DECORATED>
    <FUNCLINE>950</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>4</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
        <FILENAME>mat.inl.hpp</FILENAME>
        <LINE>953</LINE>
        <COLUMN>4</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
        <FILENAME>mat.inl.hpp</FILENAME>
        <LINE>954</LINE>
        <COLUMN>4</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>分支</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>“data+step.p[0]*i0”可能为 NULL (跳过此分支)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
        <FILENAME>mat.inl.hpp</FILENAME>
        <LINE>955</LINE>
        <COLUMN>4</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
        <FILENAME>mat.inl.hpp</FILENAME>
        <LINE>956</LINE>
        <COLUMN>4</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
        <FILENAME>mat.inl.hpp</FILENAME>
        <LINE>957</LINE>
        <COLUMN>4</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
        <FILENAME>mat.inl.hpp</FILENAME>
        <LINE>958</LINE>
        <COLUMN>4</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>使用情况</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>已取消对“data+step.p[0]*i0”的引用，但可能仍为 NULL</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
      <FILENAME>matx.hpp</FILENAME>
      <LINE>505</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>for 循环定义错误: 初始条件不满足测试。 循环体未执行。</DESCRIPTION>
    <FUNCTION>cv::Matx&lt;float,2,1&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Matx@M$01$00@cv@@QEAA@MM@Z</DECORATED>
    <FUNCLINE>501</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
      <FILENAME>matx.hpp</FILENAME>
      <LINE>505</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>6201</DEFECTCODE>
    <DESCRIPTION>索引“2”超出了“0”至“1”的有效范围(对于可能在堆栈中分配的缓冲区“this-&gt;val”)。</DESCRIPTION>
    <FUNCTION>cv::Matx&lt;float,2,1&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Matx@M$01$00@cv@@QEAA@MM@Z</DECORATED>
    <FUNCLINE>501</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
      <FILENAME>matx.hpp</FILENAME>
      <LINE>521</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>for 循环定义错误: 初始条件不满足测试。 循环体未执行。</DESCRIPTION>
    <FUNCTION>cv::Matx&lt;float,4,1&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Matx@M$03$00@cv@@QEAA@MMMM@Z</DECORATED>
    <FUNCLINE>517</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
      <FILENAME>matx.hpp</FILENAME>
      <LINE>521</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>6201</DEFECTCODE>
    <DESCRIPTION>索引“4”超出了“0”至“3”的有效范围(对于可能在堆栈中分配的缓冲区“this-&gt;val”)。</DESCRIPTION>
    <FUNCTION>cv::Matx&lt;float,4,1&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Matx@M$03$00@cv@@QEAA@MMMM@Z</DECORATED>
    <FUNCLINE>517</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\program\OpenCV\OpenCV1\opencv\build\include\opencv2\core\</FILEPATH>
      <FILENAME>ptr.inl.hpp</FILENAME>
      <LINE>258</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26439</DEFECTCODE>
    <DESCRIPTION>可能不会 throw 此类型的函数。将其声明为 "noexcept" (f.6)。</DESCRIPTION>
    <FUNCTION>cv::Ptr&lt;cv::videostab::IMotionStabilizer&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Ptr@VIMotionStabilizer@videostab@cv@@@cv@@QEAA@$$QEAU01@@Z</DECORATED>
    <FUNCLINE>258</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>CBrick.cpp</FILENAME>
      <LINE>3</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 CBrick::brick_image。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>CBrick::{ctor}</FUNCTION>
    <DECORATED>??0CBrick@@QEAA@XZ</DECORATED>
    <FUNCLINE>3</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>CBrick::brick_image</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>CPlayer.cpp</FILENAME>
      <LINE>4</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 CPlayer::m_dir。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>CPlayer::{ctor}</FUNCTION>
    <DECORATED>??0CPlayer@@QEAA@XZ</DECORATED>
    <FUNCLINE>4</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>CPlayer::m_dir</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>CPlayer.cpp</FILENAME>
      <LINE>36</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CPlayer::DrawtoBK</FUNCTION>
    <DECORATED>?DrawtoBK@CPlayer@@QEAAXPEAU_IplImage@@@Z</DECORATED>
    <FUNCLINE>21</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>CPlayer.cpp</FILENAME>
      <LINE>37</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CPlayer::DrawtoBK</FUNCTION>
    <DECORATED>?DrawtoBK@CPlayer@@QEAAXPEAU_IplImage@@@Z</DECORATED>
    <FUNCLINE>21</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>CPlayer.cpp</FILENAME>
      <LINE>38</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CPlayer::DrawtoBK</FUNCTION>
    <DECORATED>?DrawtoBK@CPlayer@@QEAAXPEAU_IplImage@@@Z</DECORATED>
    <FUNCLINE>21</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>CPlayer.cpp</FILENAME>
      <LINE>46</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CPlayer::DrawtoBK</FUNCTION>
    <DECORATED>?DrawtoBK@CPlayer@@QEAAXPEAU_IplImage@@@Z</DECORATED>
    <FUNCLINE>21</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>CPlayer.cpp</FILENAME>
      <LINE>47</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CPlayer::DrawtoBK</FUNCTION>
    <DECORATED>?DrawtoBK@CPlayer@@QEAAXPEAU_IplImage@@@Z</DECORATED>
    <FUNCLINE>21</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>CPlayer.cpp</FILENAME>
      <LINE>48</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CPlayer::DrawtoBK</FUNCTION>
    <DECORATED>?DrawtoBK@CPlayer@@QEAAXPEAU_IplImage@@@Z</DECORATED>
    <FUNCLINE>21</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>CPlayer.cpp</FILENAME>
      <LINE>49</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CPlayer::DrawtoBK</FUNCTION>
    <DECORATED>?DrawtoBK@CPlayer@@QEAAXPEAU_IplImage@@@Z</DECORATED>
    <FUNCLINE>21</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>CPlayer.cpp</FILENAME>
      <LINE>50</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CPlayer::DrawtoBK</FUNCTION>
    <DECORATED>?DrawtoBK@CPlayer@@QEAAXPEAU_IplImage@@@Z</DECORATED>
    <FUNCLINE>21</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>CPlayer.cpp</FILENAME>
      <LINE>51</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CPlayer::DrawtoBK</FUNCTION>
    <DECORATED>?DrawtoBK@CPlayer@@QEAAXPEAU_IplImage@@@Z</DECORATED>
    <FUNCLINE>21</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>CPlayer.cpp</FILENAME>
      <LINE>64</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CPlayer::DrawtoBK</FUNCTION>
    <DECORATED>?DrawtoBK@CPlayer@@QEAAXPEAU_IplImage@@@Z</DECORATED>
    <FUNCLINE>21</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>CPlayer.cpp</FILENAME>
      <LINE>65</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CPlayer::DrawtoBK</FUNCTION>
    <DECORATED>?DrawtoBK@CPlayer@@QEAAXPEAU_IplImage@@@Z</DECORATED>
    <FUNCLINE>21</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>CPlayer.cpp</FILENAME>
      <LINE>66</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CPlayer::DrawtoBK</FUNCTION>
    <DECORATED>?DrawtoBK@CPlayer@@QEAAXPEAU_IplImage@@@Z</DECORATED>
    <FUNCLINE>21</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>CPlayer.cpp</FILENAME>
      <LINE>74</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CPlayer::DrawtoBK</FUNCTION>
    <DECORATED>?DrawtoBK@CPlayer@@QEAAXPEAU_IplImage@@@Z</DECORATED>
    <FUNCLINE>21</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>CPlayer.cpp</FILENAME>
      <LINE>75</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CPlayer::DrawtoBK</FUNCTION>
    <DECORATED>?DrawtoBK@CPlayer@@QEAAXPEAU_IplImage@@@Z</DECORATED>
    <FUNCLINE>21</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>CPlayer.cpp</FILENAME>
      <LINE>76</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CPlayer::DrawtoBK</FUNCTION>
    <DECORATED>?DrawtoBK@CPlayer@@QEAAXPEAU_IplImage@@@Z</DECORATED>
    <FUNCLINE>21</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>CPlayer.cpp</FILENAME>
      <LINE>77</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CPlayer::DrawtoBK</FUNCTION>
    <DECORATED>?DrawtoBK@CPlayer@@QEAAXPEAU_IplImage@@@Z</DECORATED>
    <FUNCLINE>21</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>CPlayer.cpp</FILENAME>
      <LINE>78</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CPlayer::DrawtoBK</FUNCTION>
    <DECORATED>?DrawtoBK@CPlayer@@QEAAXPEAU_IplImage@@@Z</DECORATED>
    <FUNCLINE>21</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>CPlayer.cpp</FILENAME>
      <LINE>79</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CPlayer::DrawtoBK</FUNCTION>
    <DECORATED>?DrawtoBK@CPlayer@@QEAAXPEAU_IplImage@@@Z</DECORATED>
    <FUNCLINE>21</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>CRide.cpp</FILENAME>
      <LINE>3</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 CRide::m_body。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>CRide::{ctor}</FUNCTION>
    <DECORATED>??0CRide@@QEAA@XZ</DECORATED>
    <FUNCLINE>3</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>CRide::m_body</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>CRideBulider.cpp</FILENAME>
      <LINE>3</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 CRideBulider::ride。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>CRideBulider::{ctor}</FUNCTION>
    <DECORATED>??0CRideBulider@@QEAA@XZ</DECORATED>
    <FUNCLINE>3</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>CRideBulider::ride</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>CRideBulider.cpp</FILENAME>
      <LINE>38</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CRideBulider::DrawtoBK</FUNCTION>
    <DECORATED>?DrawtoBK@CRideBulider@@QEAAXPEAU_IplImage@@@Z</DECORATED>
    <FUNCLINE>29</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>CRideBulider.cpp</FILENAME>
      <LINE>39</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CRideBulider::DrawtoBK</FUNCTION>
    <DECORATED>?DrawtoBK@CRideBulider@@QEAAXPEAU_IplImage@@@Z</DECORATED>
    <FUNCLINE>29</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>CRideBulider.cpp</FILENAME>
      <LINE>40</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CRideBulider::DrawtoBK</FUNCTION>
    <DECORATED>?DrawtoBK@CRideBulider@@QEAAXPEAU_IplImage@@@Z</DECORATED>
    <FUNCLINE>29</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>CRideBulider.cpp</FILENAME>
      <LINE>50</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CRideBulider::DrawtoBK</FUNCTION>
    <DECORATED>?DrawtoBK@CRideBulider@@QEAAXPEAU_IplImage@@@Z</DECORATED>
    <FUNCLINE>29</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>CRideBulider.cpp</FILENAME>
      <LINE>51</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CRideBulider::DrawtoBK</FUNCTION>
    <DECORATED>?DrawtoBK@CRideBulider@@QEAAXPEAU_IplImage@@@Z</DECORATED>
    <FUNCLINE>29</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>CRideBulider.cpp</FILENAME>
      <LINE>52</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CRideBulider::DrawtoBK</FUNCTION>
    <DECORATED>?DrawtoBK@CRideBulider@@QEAAXPEAU_IplImage@@@Z</DECORATED>
    <FUNCLINE>29</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>CRideBulider.cpp</FILENAME>
      <LINE>53</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CRideBulider::DrawtoBK</FUNCTION>
    <DECORATED>?DrawtoBK@CRideBulider@@QEAAXPEAU_IplImage@@@Z</DECORATED>
    <FUNCLINE>29</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>CRideBulider.cpp</FILENAME>
      <LINE>54</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CRideBulider::DrawtoBK</FUNCTION>
    <DECORATED>?DrawtoBK@CRideBulider@@QEAAXPEAU_IplImage@@@Z</DECORATED>
    <FUNCLINE>29</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>CRideBulider.cpp</FILENAME>
      <LINE>55</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CRideBulider::DrawtoBK</FUNCTION>
    <DECORATED>?DrawtoBK@CRideBulider@@QEAAXPEAU_IplImage@@@Z</DECORATED>
    <FUNCLINE>29</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>CRideBulider.cpp</FILENAME>
      <LINE>68</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CRideBulider::DrawtoBK</FUNCTION>
    <DECORATED>?DrawtoBK@CRideBulider@@QEAAXPEAU_IplImage@@@Z</DECORATED>
    <FUNCLINE>29</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>CRideBulider.cpp</FILENAME>
      <LINE>69</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CRideBulider::DrawtoBK</FUNCTION>
    <DECORATED>?DrawtoBK@CRideBulider@@QEAAXPEAU_IplImage@@@Z</DECORATED>
    <FUNCLINE>29</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>CRideBulider.cpp</FILENAME>
      <LINE>70</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CRideBulider::DrawtoBK</FUNCTION>
    <DECORATED>?DrawtoBK@CRideBulider@@QEAAXPEAU_IplImage@@@Z</DECORATED>
    <FUNCLINE>29</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>CRideBulider.cpp</FILENAME>
      <LINE>78</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CRideBulider::DrawtoBK</FUNCTION>
    <DECORATED>?DrawtoBK@CRideBulider@@QEAAXPEAU_IplImage@@@Z</DECORATED>
    <FUNCLINE>29</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>CRideBulider.cpp</FILENAME>
      <LINE>79</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CRideBulider::DrawtoBK</FUNCTION>
    <DECORATED>?DrawtoBK@CRideBulider@@QEAAXPEAU_IplImage@@@Z</DECORATED>
    <FUNCLINE>29</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>CRideBulider.cpp</FILENAME>
      <LINE>80</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CRideBulider::DrawtoBK</FUNCTION>
    <DECORATED>?DrawtoBK@CRideBulider@@QEAAXPEAU_IplImage@@@Z</DECORATED>
    <FUNCLINE>29</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>CRideBulider.cpp</FILENAME>
      <LINE>81</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CRideBulider::DrawtoBK</FUNCTION>
    <DECORATED>?DrawtoBK@CRideBulider@@QEAAXPEAU_IplImage@@@Z</DECORATED>
    <FUNCLINE>29</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>CRideBulider.cpp</FILENAME>
      <LINE>82</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CRideBulider::DrawtoBK</FUNCTION>
    <DECORATED>?DrawtoBK@CRideBulider@@QEAAXPEAU_IplImage@@@Z</DECORATED>
    <FUNCLINE>29</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>CRideBulider.cpp</FILENAME>
      <LINE>83</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CRideBulider::DrawtoBK</FUNCTION>
    <DECORATED>?DrawtoBK@CRideBulider@@QEAAXPEAU_IplImage@@@Z</DECORATED>
    <FUNCLINE>29</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>CShellStrategy.cpp</FILENAME>
      <LINE>3</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 CShellStrategy::ShellImage。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>CShellStrategy::{ctor}</FUNCTION>
    <DECORATED>??0CShellStrategy@@QEAA@XZ</DECORATED>
    <FUNCLINE>3</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>CShellStrategy::ShellImage</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>CSkin.cpp</FILENAME>
      <LINE>3</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 CSkin::m_shallow。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>CSkin::{ctor}</FUNCTION>
    <DECORATED>??0CSkin@@QEAA@XZ</DECORATED>
    <FUNCLINE>3</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>CSkin::m_shallow</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>CTool.cpp</FILENAME>
      <LINE>3</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 CTool::posx。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>CTool::{ctor}</FUNCTION>
    <DECORATED>??0CTool@@QEAA@XZ</DECORATED>
    <FUNCLINE>3</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>CTool::posx</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>GameEnergy.cpp</FILENAME>
      <LINE>8</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 CGameEnergy::m_ridebuilder。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>CGameEnergy::{ctor}</FUNCTION>
    <DECORATED>??0CGameEnergy@@QEAA@XZ</DECORATED>
    <FUNCLINE>8</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>CGameEnergy::m_ridebuilder</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>MMap.cpp</FILENAME>
      <LINE>3</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 CMMap::choose。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>CMMap::{ctor}</FUNCTION>
    <DECORATED>??0CMMap@@AEAA@XZ</DECORATED>
    <FUNCLINE>3</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>CMMap::choose</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>MMap.cpp</FILENAME>
      <LINE>140</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CMMap::CreateBKimg</FUNCTION>
    <DECORATED>?CreateBKimg@CMMap@@QEAAXXZ</DECORATED>
    <FUNCLINE>120</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>MMap.cpp</FILENAME>
      <LINE>141</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CMMap::CreateBKimg</FUNCTION>
    <DECORATED>?CreateBKimg@CMMap@@QEAAXXZ</DECORATED>
    <FUNCLINE>120</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>MMap.cpp</FILENAME>
      <LINE>142</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CMMap::CreateBKimg</FUNCTION>
    <DECORATED>?CreateBKimg@CMMap@@QEAAXXZ</DECORATED>
    <FUNCLINE>120</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>MMap.cpp</FILENAME>
      <LINE>145</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CMMap::CreateBKimg</FUNCTION>
    <DECORATED>?CreateBKimg@CMMap@@QEAAXXZ</DECORATED>
    <FUNCLINE>120</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>MMap.cpp</FILENAME>
      <LINE>145</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CMMap::CreateBKimg</FUNCTION>
    <DECORATED>?CreateBKimg@CMMap@@QEAAXXZ</DECORATED>
    <FUNCLINE>120</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>MMap.cpp</FILENAME>
      <LINE>146</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CMMap::CreateBKimg</FUNCTION>
    <DECORATED>?CreateBKimg@CMMap@@QEAAXXZ</DECORATED>
    <FUNCLINE>120</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>MMap.cpp</FILENAME>
      <LINE>146</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CMMap::CreateBKimg</FUNCTION>
    <DECORATED>?CreateBKimg@CMMap@@QEAAXXZ</DECORATED>
    <FUNCLINE>120</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>MMap.cpp</FILENAME>
      <LINE>147</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CMMap::CreateBKimg</FUNCTION>
    <DECORATED>?CreateBKimg@CMMap@@QEAAXXZ</DECORATED>
    <FUNCLINE>120</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>MMap.cpp</FILENAME>
      <LINE>147</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CMMap::CreateBKimg</FUNCTION>
    <DECORATED>?CreateBKimg@CMMap@@QEAAXXZ</DECORATED>
    <FUNCLINE>120</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>MMap.cpp</FILENAME>
      <LINE>157</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CMMap::CreateBKimg</FUNCTION>
    <DECORATED>?CreateBKimg@CMMap@@QEAAXXZ</DECORATED>
    <FUNCLINE>120</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>MMap.cpp</FILENAME>
      <LINE>158</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CMMap::CreateBKimg</FUNCTION>
    <DECORATED>?CreateBKimg@CMMap@@QEAAXXZ</DECORATED>
    <FUNCLINE>120</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>MMap.cpp</FILENAME>
      <LINE>159</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CMMap::CreateBKimg</FUNCTION>
    <DECORATED>?CreateBKimg@CMMap@@QEAAXXZ</DECORATED>
    <FUNCLINE>120</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>MMap.cpp</FILENAME>
      <LINE>162</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CMMap::CreateBKimg</FUNCTION>
    <DECORATED>?CreateBKimg@CMMap@@QEAAXXZ</DECORATED>
    <FUNCLINE>120</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>MMap.cpp</FILENAME>
      <LINE>162</LINE>
      <COLUMN>63</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CMMap::CreateBKimg</FUNCTION>
    <DECORATED>?CreateBKimg@CMMap@@QEAAXXZ</DECORATED>
    <FUNCLINE>120</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>MMap.cpp</FILENAME>
      <LINE>163</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CMMap::CreateBKimg</FUNCTION>
    <DECORATED>?CreateBKimg@CMMap@@QEAAXXZ</DECORATED>
    <FUNCLINE>120</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>MMap.cpp</FILENAME>
      <LINE>163</LINE>
      <COLUMN>63</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CMMap::CreateBKimg</FUNCTION>
    <DECORATED>?CreateBKimg@CMMap@@QEAAXXZ</DECORATED>
    <FUNCLINE>120</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>MMap.cpp</FILENAME>
      <LINE>164</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CMMap::CreateBKimg</FUNCTION>
    <DECORATED>?CreateBKimg@CMMap@@QEAAXXZ</DECORATED>
    <FUNCLINE>120</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>MMap.cpp</FILENAME>
      <LINE>164</LINE>
      <COLUMN>63</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CMMap::CreateBKimg</FUNCTION>
    <DECORATED>?CreateBKimg@CMMap@@QEAAXXZ</DECORATED>
    <FUNCLINE>120</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>MMap.cpp</FILENAME>
      <LINE>414</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CMMap::UpMap</FUNCTION>
    <DECORATED>?UpMap@CMMap@@QEAAXXZ</DECORATED>
    <FUNCLINE>394</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>MMap.cpp</FILENAME>
      <LINE>415</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CMMap::UpMap</FUNCTION>
    <DECORATED>?UpMap@CMMap@@QEAAXXZ</DECORATED>
    <FUNCLINE>394</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>MMap.cpp</FILENAME>
      <LINE>416</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CMMap::UpMap</FUNCTION>
    <DECORATED>?UpMap@CMMap@@QEAAXXZ</DECORATED>
    <FUNCLINE>394</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>MMap.cpp</FILENAME>
      <LINE>419</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CMMap::UpMap</FUNCTION>
    <DECORATED>?UpMap@CMMap@@QEAAXXZ</DECORATED>
    <FUNCLINE>394</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>MMap.cpp</FILENAME>
      <LINE>419</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CMMap::UpMap</FUNCTION>
    <DECORATED>?UpMap@CMMap@@QEAAXXZ</DECORATED>
    <FUNCLINE>394</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>MMap.cpp</FILENAME>
      <LINE>420</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CMMap::UpMap</FUNCTION>
    <DECORATED>?UpMap@CMMap@@QEAAXXZ</DECORATED>
    <FUNCLINE>394</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>MMap.cpp</FILENAME>
      <LINE>420</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CMMap::UpMap</FUNCTION>
    <DECORATED>?UpMap@CMMap@@QEAAXXZ</DECORATED>
    <FUNCLINE>394</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>MMap.cpp</FILENAME>
      <LINE>421</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CMMap::UpMap</FUNCTION>
    <DECORATED>?UpMap@CMMap@@QEAAXXZ</DECORATED>
    <FUNCLINE>394</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>MMap.cpp</FILENAME>
      <LINE>421</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CMMap::UpMap</FUNCTION>
    <DECORATED>?UpMap@CMMap@@QEAAXXZ</DECORATED>
    <FUNCLINE>394</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>MMap.cpp</FILENAME>
      <LINE>431</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CMMap::UpMap</FUNCTION>
    <DECORATED>?UpMap@CMMap@@QEAAXXZ</DECORATED>
    <FUNCLINE>394</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>MMap.cpp</FILENAME>
      <LINE>432</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CMMap::UpMap</FUNCTION>
    <DECORATED>?UpMap@CMMap@@QEAAXXZ</DECORATED>
    <FUNCLINE>394</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>MMap.cpp</FILENAME>
      <LINE>433</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CMMap::UpMap</FUNCTION>
    <DECORATED>?UpMap@CMMap@@QEAAXXZ</DECORATED>
    <FUNCLINE>394</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>MMap.cpp</FILENAME>
      <LINE>436</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CMMap::UpMap</FUNCTION>
    <DECORATED>?UpMap@CMMap@@QEAAXXZ</DECORATED>
    <FUNCLINE>394</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>MMap.cpp</FILENAME>
      <LINE>436</LINE>
      <COLUMN>63</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CMMap::UpMap</FUNCTION>
    <DECORATED>?UpMap@CMMap@@QEAAXXZ</DECORATED>
    <FUNCLINE>394</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>MMap.cpp</FILENAME>
      <LINE>437</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CMMap::UpMap</FUNCTION>
    <DECORATED>?UpMap@CMMap@@QEAAXXZ</DECORATED>
    <FUNCLINE>394</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>MMap.cpp</FILENAME>
      <LINE>437</LINE>
      <COLUMN>63</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CMMap::UpMap</FUNCTION>
    <DECORATED>?UpMap@CMMap@@QEAAXXZ</DECORATED>
    <FUNCLINE>394</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>MMap.cpp</FILENAME>
      <LINE>438</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CMMap::UpMap</FUNCTION>
    <DECORATED>?UpMap@CMMap@@QEAAXXZ</DECORATED>
    <FUNCLINE>394</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>MMap.cpp</FILENAME>
      <LINE>438</LINE>
      <COLUMN>63</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CMMap::UpMap</FUNCTION>
    <DECORATED>?UpMap@CMMap@@QEAAXXZ</DECORATED>
    <FUNCLINE>394</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>MMap.cpp</FILENAME>
      <LINE>457</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CMMap::UpMap</FUNCTION>
    <DECORATED>?UpMap@CMMap@@QEAAXXZ</DECORATED>
    <FUNCLINE>394</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>MMap.cpp</FILENAME>
      <LINE>458</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CMMap::UpMap</FUNCTION>
    <DECORATED>?UpMap@CMMap@@QEAAXXZ</DECORATED>
    <FUNCLINE>394</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>MMap.cpp</FILENAME>
      <LINE>459</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CMMap::UpMap</FUNCTION>
    <DECORATED>?UpMap@CMMap@@QEAAXXZ</DECORATED>
    <FUNCLINE>394</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>MMap.cpp</FILENAME>
      <LINE>462</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CMMap::UpMap</FUNCTION>
    <DECORATED>?UpMap@CMMap@@QEAAXXZ</DECORATED>
    <FUNCLINE>394</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>MMap.cpp</FILENAME>
      <LINE>462</LINE>
      <COLUMN>64</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CMMap::UpMap</FUNCTION>
    <DECORATED>?UpMap@CMMap@@QEAAXXZ</DECORATED>
    <FUNCLINE>394</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>MMap.cpp</FILENAME>
      <LINE>463</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CMMap::UpMap</FUNCTION>
    <DECORATED>?UpMap@CMMap@@QEAAXXZ</DECORATED>
    <FUNCLINE>394</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>MMap.cpp</FILENAME>
      <LINE>463</LINE>
      <COLUMN>64</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CMMap::UpMap</FUNCTION>
    <DECORATED>?UpMap@CMMap@@QEAAXXZ</DECORATED>
    <FUNCLINE>394</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>MMap.cpp</FILENAME>
      <LINE>464</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CMMap::UpMap</FUNCTION>
    <DECORATED>?UpMap@CMMap@@QEAAXXZ</DECORATED>
    <FUNCLINE>394</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>MMap.cpp</FILENAME>
      <LINE>464</LINE>
      <COLUMN>64</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CMMap::UpMap</FUNCTION>
    <DECORATED>?UpMap@CMMap@@QEAAXXZ</DECORATED>
    <FUNCLINE>394</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>Shell.cpp</FILENAME>
      <LINE>5</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 CShell::m_picture。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>CShell::{ctor}</FUNCTION>
    <DECORATED>??0CShell@@QEAA@XZ</DECORATED>
    <FUNCLINE>5</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>CShell::m_picture</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>Shell.cpp</FILENAME>
      <LINE>40</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CShell::DrawtoBK</FUNCTION>
    <DECORATED>?DrawtoBK@CShell@@QEAAXPEAU_IplImage@@@Z</DECORATED>
    <FUNCLINE>32</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>Shell.cpp</FILENAME>
      <LINE>41</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CShell::DrawtoBK</FUNCTION>
    <DECORATED>?DrawtoBK@CShell@@QEAAXPEAU_IplImage@@@Z</DECORATED>
    <FUNCLINE>32</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>Shell.cpp</FILENAME>
      <LINE>42</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CShell::DrawtoBK</FUNCTION>
    <DECORATED>?DrawtoBK@CShell@@QEAAXPEAU_IplImage@@@Z</DECORATED>
    <FUNCLINE>32</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>Shell.cpp</FILENAME>
      <LINE>50</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CShell::DrawtoBK</FUNCTION>
    <DECORATED>?DrawtoBK@CShell@@QEAAXPEAU_IplImage@@@Z</DECORATED>
    <FUNCLINE>32</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>Shell.cpp</FILENAME>
      <LINE>51</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CShell::DrawtoBK</FUNCTION>
    <DECORATED>?DrawtoBK@CShell@@QEAAXPEAU_IplImage@@@Z</DECORATED>
    <FUNCLINE>32</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>Shell.cpp</FILENAME>
      <LINE>52</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CShell::DrawtoBK</FUNCTION>
    <DECORATED>?DrawtoBK@CShell@@QEAAXPEAU_IplImage@@@Z</DECORATED>
    <FUNCLINE>32</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>Shell.cpp</FILENAME>
      <LINE>53</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CShell::DrawtoBK</FUNCTION>
    <DECORATED>?DrawtoBK@CShell@@QEAAXPEAU_IplImage@@@Z</DECORATED>
    <FUNCLINE>32</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>Shell.cpp</FILENAME>
      <LINE>54</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CShell::DrawtoBK</FUNCTION>
    <DECORATED>?DrawtoBK@CShell@@QEAAXPEAU_IplImage@@@Z</DECORATED>
    <FUNCLINE>32</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>Shell.cpp</FILENAME>
      <LINE>55</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CShell::DrawtoBK</FUNCTION>
    <DECORATED>?DrawtoBK@CShell@@QEAAXPEAU_IplImage@@@Z</DECORATED>
    <FUNCLINE>32</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>Shell.cpp</FILENAME>
      <LINE>106</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CShell::DraeEffects</FUNCTION>
    <DECORATED>?DraeEffects@CShell@@QEAAXPEAU_IplImage@@HHH@Z</DECORATED>
    <FUNCLINE>96</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>Shell.cpp</FILENAME>
      <LINE>107</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CShell::DraeEffects</FUNCTION>
    <DECORATED>?DraeEffects@CShell@@QEAAXPEAU_IplImage@@HHH@Z</DECORATED>
    <FUNCLINE>96</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>Shell.cpp</FILENAME>
      <LINE>108</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CShell::DraeEffects</FUNCTION>
    <DECORATED>?DraeEffects@CShell@@QEAAXPEAU_IplImage@@HHH@Z</DECORATED>
    <FUNCLINE>96</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>Shell.cpp</FILENAME>
      <LINE>109</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CShell::DraeEffects</FUNCTION>
    <DECORATED>?DraeEffects@CShell@@QEAAXPEAU_IplImage@@HHH@Z</DECORATED>
    <FUNCLINE>96</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>Shell.cpp</FILENAME>
      <LINE>110</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CShell::DraeEffects</FUNCTION>
    <DECORATED>?DraeEffects@CShell@@QEAAXPEAU_IplImage@@HHH@Z</DECORATED>
    <FUNCLINE>96</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\ZHOU\Desktop\泡泡堂\paopaot\泡泡堂\</FILEPATH>
      <FILENAME>Shell.cpp</FILENAME>
      <LINE>111</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CShell::DraeEffects</FUNCTION>
    <DECORATED>?DraeEffects@CShell@@QEAAXPEAU_IplImage@@HHH@Z</DECORATED>
    <FUNCLINE>96</FUNCLINE>
    <PATH></PATH>
  </DEFECT></DEFECTS>